from django.contrib import messages
from django.contrib.auth import get_user_model, login
from django.db import transaction
from django.shortcuts import redirect, render
from django.urls import reverse
from django.contrib.auth.models import Group

from orderpiqrApp.forms.accounts.signup_form import CompanySignupForm
from orderpiqrApp.models import Customer, UserProfile  # adjust to your actual paths
from django.utils.translation import gettext as _

User = get_user_model()

# If your profile model uses roles, you can set them here (optional):
ROLE_ADMIN = 'ADMIN'
ROLE_PICKER = 'PICKER'
PROFILE_USERNAME_FIELD = 'username'


def signup(request):
    if request.method == 'POST':
        form = CompanySignupForm(request.POST)
        if form.is_valid():
            try:
                with transaction.atomic():
                    # Create company
                    customer = Customer.objects.create(name=form.cleaned_data['company_name'], )
                    # Enforce per-company unique usernames now that we have a customer
                    form.ensure_profile_username_available(customer, form.cleaned_data['admin_profile_username'],
                                                           'admin_profile_username', )
                    form.ensure_profile_username_available(customer, form.cleaned_data['picker_profile_username'],
                                                           'picker_profile_username', )

                    # Create Admin user (email is optional; username for auth will be autogenerated if your AUTH_USER_MODEL requires)
                    admin_user = User.objects.create_user(
                        username=form.cleaned_data["admin_profile_username"],
                        email=form.cleaned_data["admin_email"],
                        password=form.cleaned_data["admin_password1"],
                        is_staff=True,
                    )
                    picker_user = User.objects.create_user(
                        username=form.cleaned_data["picker_profile_username"],
                        email=form.cleaned_data["picker_email"],
                        password=form.cleaned_data["picker_password1"],
                    )
                    admin_group = Group.objects.get(name="companyadmin")
                    picker_group = Group.objects.get(name="orderpicker")
                    admin_user.groups.add(admin_group)
                    picker_user.groups.add(picker_group)
                    UserProfile.objects.create(user=admin_user, customer=customer)
                    UserProfile.objects.create(user=picker_user, customer=customer)

                messages.success(request, _("Your company and users were created. Welcome! "
                                            "Start the onboarding by pressing the green button on the lower right of your screen.")
                                 )
                login(request, admin_user)
                return redirect(reverse("admin:index"))
            except Exception as e:
                print(e)
                form.add_error(None, str(e))
    else:
        form = CompanySignupForm()

    return render(request, 'registration/signup.html', {'form': form})
